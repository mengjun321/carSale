<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzit.dao.CarorderMapper">
    <!-- Carorder的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Carorder_Map" type="com.hzit.entity.Carorder">
        <id column="orderId" jdbcType="INTEGER" property="orderId" />
        <result column="orderType" jdbcType="VARCHAR" property="orderType" />
        <result column="companyId" jdbcType="INTEGER" property="companyId" />
        <result column="orderTotalPrice" jdbcType="DECIMAL" property="orderTotalPrice" />
        <result column="orderNum" jdbcType="INTEGER" property="orderNum" />
        <result column="carId" jdbcType="INTEGER" property="carId" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:carorder的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="carorder_Column">
        carorder.orderId as orderId
        ,carorder.orderType as orderType
        ,carorder.companyId as companyId
        ,carorder.orderTotalPrice as orderTotalPrice
        ,carorder.orderNum as orderNum
        ,carorder.carId as carId
    </sql>

    <!--获得类名为:Carorder对应的数据库表的数据总行数 -->
    <select id="getCarorderRowCount" parameterType="com.hzit.common.Assist" resultType="java.lang.Long">
        select count(orderId) from carorder
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Carorder对应数据库中表的数据集合 -->
    <select id="selectCarorder" parameterType="com.hzit.common.Assist"  resultMap="result_Carorder_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="carorder_Column" /> 
            </otherwise>
        </choose>
        from carorder
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT orderId as primary_key FROM carorder
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow,jdbcType=INTEGER},#{rowSize,jdbcType=INTEGER} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize,jdbcType=INTEGER}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=carorder.orderId
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Carorder对象,以参数Carorder对象中不为空的属性作为条件进行查询-->
    <select id="selectCarorderByObj" parameterType="com.hzit.entity.Carorder" resultMap="result_Carorder_Map">
        select 
            <include refid="carorder_Column" /> 
        from carorder
        <where>
            <if test="carId != null "> and carorder.carId = #{carId,jdbcType=INTEGER}</if>
            <if test="orderNum != null "> and carorder.orderNum = #{orderNum,jdbcType=INTEGER}</if>
            <if test="orderTotalPrice != null "> and carorder.orderTotalPrice = #{orderTotalPrice,jdbcType=DECIMAL}</if>
            <if test="companyId != null "> and carorder.companyId = #{companyId,jdbcType=INTEGER}</if>
            <if test="orderType != null "> and carorder.orderType = #{orderType,jdbcType=VARCHAR}</if>
            <if test="orderId != null "> and carorder.orderId = #{orderId,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过Carorder的id获得对应数据库中表的数据对象-->
    <select id="selectCarorderById" parameterType="java.lang.Integer" resultMap="result_Carorder_Map">
        select 
            <include refid="carorder_Column" /> 
        from carorder
        where carorder.orderId = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将Carorder插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertCarorder" parameterType="com.hzit.entity.Carorder">
        insert into carorder(orderId,orderType,companyId,orderTotalPrice,orderNum,carId) 
        values(#{orderId,jdbcType=INTEGER},#{orderType,jdbcType=VARCHAR},#{companyId,jdbcType=INTEGER},#{orderTotalPrice,jdbcType=DECIMAL},#{orderNum,jdbcType=INTEGER},#{carId,jdbcType=INTEGER})
    </insert>

    <!-- 将Carorder中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyCarorder" parameterType="com.hzit.entity.Carorder">
        insert into carorder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">orderId,</if>
            <if test="orderType != null">orderType,</if>
            <if test="companyId != null">companyId,</if>
            <if test="orderTotalPrice != null">orderTotalPrice,</if>
            <if test="orderNum != null">orderNum,</if>
            <if test="carId != null">carId,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null"> #{orderId,jdbcType=INTEGER},</if>
            <if test="orderType != null"> #{orderType,jdbcType=VARCHAR},</if>
            <if test="companyId != null"> #{companyId,jdbcType=INTEGER},</if>
            <if test="orderTotalPrice != null"> #{orderTotalPrice,jdbcType=DECIMAL},</if>
            <if test="orderNum != null"> #{orderNum,jdbcType=INTEGER},</if>
            <if test="carId != null"> #{carId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <!-- 将Carorder批量插入到对应数据库的表中-->
    <insert id="insertCarorderByBatch" parameterType="ArrayList">
        insert into carorder(orderId,orderType,companyId,orderTotalPrice,orderNum,carId) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.orderId,jdbcType=INTEGER},#{item.orderType,jdbcType=VARCHAR},#{item.companyId,jdbcType=INTEGER},#{item.orderTotalPrice,jdbcType=DECIMAL},#{item.orderNum,jdbcType=INTEGER},#{item.carId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!-- 通过Carorder的id将数据库表中对应的数据删除-->
    <delete id="deleteCarorderById" parameterType="java.lang.Integer">
        delete from carorder
        where orderId = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Carorder对应的数据库表的数据删除-->
    <delete id="deleteCarorder" parameterType="com.hzit.common.Assist">
        delete from carorder
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Carorder的id将Carorder的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateCarorderById" parameterType="com.hzit.entity.Carorder">
        update carorder set
            orderType=#{orderType,jdbcType=VARCHAR}
            ,companyId=#{companyId,jdbcType=INTEGER}
            ,orderTotalPrice=#{orderTotalPrice,jdbcType=DECIMAL}
            ,orderNum=#{orderNum,jdbcType=INTEGER}
            ,carId=#{carId,jdbcType=INTEGER}
        where orderId=#{orderId,jdbcType=INTEGER}
    </update>

    <!-- 通过Carorder的id将Carorder中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyCarorderById" parameterType="com.hzit.entity.Carorder">
        update carorder
        <set>
            <if test="orderType != null">
                orderType=#{orderType,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                companyId=#{companyId,jdbcType=INTEGER},
            </if>
            <if test="orderTotalPrice != null">
                orderTotalPrice=#{orderTotalPrice,jdbcType=DECIMAL},
            </if>
            <if test="orderNum != null">
                orderNum=#{orderNum,jdbcType=INTEGER},
            </if>
            <if test="carId != null">
                carId=#{carId,jdbcType=INTEGER},
            </if>
        </set>
        where orderId=#{orderId,jdbcType=INTEGER}
    </update>

    <!-- 通过辅助工具Assist中的条件将Carorder中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateCarorder" parameterType="map">
        update carorder
        <set>
                orderId=#{enti.orderId,jdbcType=INTEGER},
                orderType=#{enti.orderType,jdbcType=VARCHAR},
                companyId=#{enti.companyId,jdbcType=INTEGER},
                orderTotalPrice=#{enti.orderTotalPrice,jdbcType=DECIMAL},
                orderNum=#{enti.orderNum,jdbcType=INTEGER},
                carId=#{enti.carId,jdbcType=INTEGER},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Carorder中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyCarorder" parameterType="map">
        update carorder
        <set>
            <if test="enti.orderId != null">
                orderId=#{enti.orderId,jdbcType=INTEGER},
            </if>
            <if test="enti.orderType != null">
                orderType=#{enti.orderType,jdbcType=VARCHAR},
            </if>
            <if test="enti.companyId != null">
                companyId=#{enti.companyId,jdbcType=INTEGER},
            </if>
            <if test="enti.orderTotalPrice != null">
                orderTotalPrice=#{enti.orderTotalPrice,jdbcType=DECIMAL},
            </if>
            <if test="enti.orderNum != null">
                orderNum=#{enti.orderNum,jdbcType=INTEGER},
            </if>
            <if test="enti.carId != null">
                carId=#{enti.carId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>